import Optional from 'optional-js';
import * as Types from '../../types';
import { NetworkConfig } from '../../network';
import * as Coeus from '../../coeus-wasm';
export declare class CoeusApi implements Types.Layer2.ICoeusApi {
    readonly networkConfig: NetworkConfig;
    private readonly clientInstance;
    constructor(networkConfig: NetworkConfig);
    resolve(name: Coeus.DomainName): Promise<unknown>;
    getMetadata(name: Coeus.DomainName): Promise<Types.Layer2.IDomainMetadata>;
    getChildren(name: Coeus.DomainName): Promise<string[]>;
    getLastNonce(pk: Coeus.PublicKey): Promise<BigInt>;
    getTxnStatus(txid: string): Promise<Optional<boolean>>;
}
export declare const createCoeusApi: (networkConfig: NetworkConfig) => Types.Layer2.ICoeusApi;
//# sourceMappingURL=coeus-api.d.ts.map