"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Network;
(function (Network) {
    Network["LocalTestnet"] = "local(testnet)";
    Network["Testnet"] = "testnet";
    Network["Devnet"] = "devnet";
    Network["Mainnet"] = "mainnet";
})(Network = exports.Network || (exports.Network = {}));
exports.getHostByNetwork = (network) => {
    switch (network) {
        case Network.LocalTestnet:
            return 'http://127.0.0.1';
        case Network.Testnet:
            return 'https://test.explorer.hydraledger.io';
        case Network.Devnet:
            return 'https://dev.explorer.hydraledger.io';
        case Network.Mainnet:
            return 'https://explorer.hydraledger.io';
        default:
            throw new Error(`Unknown network ${network}`);
    }
};
class NetworkConfig {
    constructor(host, port) {
        this.host = host;
        this.port = port;
    }
    static fromUrl(host, port) {
        return new NetworkConfig(host, port);
    }
    /**
     * @param network - the network type you'd like to use here. Either Network.[LocalTestnet|Testnet|Devnet|Mainnet]
     * @param port - the port you'd like to connect to. The Hydra Core's by default port is 4703, but IOP's nodes operate
     * under https, which is 4705.
     */
    static fromNetwork(network, port = 4705) {
        return new NetworkConfig(exports.getHostByNetwork(network), port);
    }
}
exports.NetworkConfig = NetworkConfig;
exports.allNetworks = [Network.LocalTestnet, Network.Testnet, Network.Devnet, Network.Mainnet];
//# sourceMappingURL=network.js.map