"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const morpheus_crypto_1 = require("@internet-of-people/morpheus-crypto");
const visitor_1 = require("../visitor");
const add_key_1 = require("./add-key");
const add_right_1 = require("./add-right");
const revoke_key_1 = require("./revoke-key");
const revoke_right_1 = require("./revoke-right");
const tombstone_did_1 = require("./tombstone-did");
class FromSignableData {
    constructor(data) {
        this.data = data;
    }
    addKey() {
        const params = this.data;
        return new add_key_1.AddKey(new morpheus_crypto_1.Did(params.did), params.lastTxId, morpheus_crypto_1.authenticationFromData(params.auth), params.expiresAtHeight);
    }
    revokeKey() {
        const params = this.data;
        return new revoke_key_1.RevokeKey(new morpheus_crypto_1.Did(params.did), params.lastTxId, morpheus_crypto_1.authenticationFromData(params.auth));
    }
    addRight() {
        const params = this.data;
        return new add_right_1.AddRight(new morpheus_crypto_1.Did(params.did), params.lastTxId, morpheus_crypto_1.authenticationFromData(params.auth), params.right);
    }
    revokeRight() {
        const params = this.data;
        return new revoke_right_1.RevokeRight(new morpheus_crypto_1.Did(params.did), params.lastTxId, morpheus_crypto_1.authenticationFromData(params.auth), params.right);
    }
    tombstoneDid() {
        const params = this.data;
        return new tombstone_did_1.TombstoneDid(new morpheus_crypto_1.Did(params.did), params.lastTxId);
    }
}
exports.fromSignableData = (data) => {
    return visitor_1.visitSignableOperation(data.operation, new FromSignableData(data));
};
//# sourceMappingURL=from-data.js.map