import { Did } from '@internet-of-people/morpheus-crypto';
import { ISignableOperationVisitor } from '../../../types/layer1';
import { Crypto, Sdk } from '../../../types';
import { SignableOperation } from '../../operation';
import { SignableOperationType } from '../../operation-type';
export declare class RevokeKey extends SignableOperation {
    private readonly did;
    private readonly lastTxId;
    private readonly auth;
    constructor(did: Did, lastTxId: Sdk.TransactionId | null, auth: Crypto.Authentication);
    get type(): SignableOperationType;
    accept<T>(visitor: ISignableOperationVisitor<T>): T;
}
//# sourceMappingURL=operation.d.ts.map