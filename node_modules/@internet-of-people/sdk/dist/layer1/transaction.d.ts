import { Transactions, Utils } from '@arkecosystem/crypto';
import ByteBuffer from 'bytebuffer';
import * as Layer1 from '../types/layer1';
export declare class MorpheusTransaction extends Transactions.Transaction {
    static readonly typeGroup: number;
    static readonly type: number;
    static readonly key: string;
    protected static defaultStaticFee: Utils.BigNumber;
    data: Layer1.IMorpheusData;
    /**
     * Returns the schema of the Morpheus transaction. The asset consists of a collection of operation attempts.
     */
    static getSchema(): Transactions.schemas.TransactionSchema;
    serialize(): ByteBuffer;
    deserialize(buffer: ByteBuffer): void;
}
//# sourceMappingURL=transaction.d.ts.map